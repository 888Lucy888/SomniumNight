# -*- coding: utf-8 -*-
"""SomniumNightData.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NiMtrrrdxD7gwAVs0T3sXuxRNu-_Qgmz
"""

import pandas as pd
import matplotlib.pyplot as plt
from datetime import timedelta

# Create a DataFrame from the data
data = {
    'Dispositivo': ['Withings Sleep', 'Apple Watch', 'Withings Sleep', 'Xiaomi Band', 'Apple Watch', 'Fitbit'],
    'Nombre (Siglas)': ['C.L.C.A.', 'I.V.C.S.', 'X.M.', 'M.A.V.', 'S.G.N.', 'E.C.'],
    'Horas de Sueño': ['8:23', '4:45', '7:04', '8:02', '6:51', '5:39'],
    'REM %': ['25,00%', '19.3', '29%', '21,00%', '24,00%', '7,00%'],
    'Deep Sleep %': ['38,00%', '31.6', '26%', '28,00%', '24,00%', '9,00%'],
    'Horas de S. WN': ['7:17', '8:11', '6:44', '5:54', '9:04', '7:02'],
    'REM % WN': ['32,00%', '31.36', '33%', '15,00%', '17,00%', '18,00%'],
    'Deep Sleep % WN': ['17,00%', '12.83', '20%', '19,00%', '13,00%', '17,00%']
}

df = pd.DataFrame(data)

# Convert time columns to timedelta format
df['Horas de Sueño'] = pd.to_timedelta(df['Horas de Sueño'] + ':00')
df['Horas de S. WN'] = pd.to_timedelta(df['Horas de S. WN'] + ':00')

# Convert percentage columns to numeric format
df['REM %'] = df['REM %'].str.rstrip('%').str.replace(',', '.').astype(float)
df['Deep Sleep %'] = df['Deep Sleep %'].str.rstrip('%').str.replace(',', '.').astype(float)
df['REM % WN'] = df['REM % WN'].str.rstrip('%').str.replace(',', '.').astype(float)
df['Deep Sleep % WN'] = df['Deep Sleep % WN'].str.rstrip('%').str.replace(',', '.').astype(float)

# Calculate mode, mean and median values
mode_no_wn_sueño = df['Horas de Sueño'].mode().iloc[0]
mode_wn_sueño = df['Horas de S. WN'].mode().iloc[0]

mean_sueño = df['Horas de Sueño'].mean()
median_sueño = df['Horas de Sueño'].median()

mean_wn = df['Horas de S. WN'].mean()
median_wn = df['Horas de S. WN'].median()

# %% 

mode_no_wn_rem = df['REM %'].mode().iloc[0]
mode_wn_rem = df['REM % WN'].mode().iloc[0]

mean_no_wn_rem = df['REM %'].mean()
mean_wn_rem = df['REM % WN'].mean()

median_no_wn_rem = df['REM %'].median()
median_wn_rem = df['REM % WN'].median()

mode_no_wn_deep_sleep = df['Deep Sleep %'].mode().iloc[0]
mode_wn_deep_sleep = df['Deep Sleep % WN'].mode().iloc[0]

mean_no_wn_deep_sleep = df['Deep Sleep %'].mean()
mean_wn_deep_sleep = df['Deep Sleep % WN'].mean()

median_no_wn_deep_sleep = df['Deep Sleep %'].median()
median_wn_deep_sleep = df['Deep Sleep % WN'].median()


# Convert mean and median values to HH:MM:SS format
mean_sueño_str = str(mean_sueño).split(' ')[-1]
median_sueño_str = str(median_sueño).split(' ')[-1]

mean_wn_str = str(mean_wn).split(' ')[-1]
median_wn_str = str(median_wn).split(' ')[-1]

# Print the results
print("Without White Noise:")
print("Horas de Sueño - Mode:", mode_no_wn_sueño)
print(f"Horas de Sueño - Mean: {mean_sueño_str}")
print(f"Horas de Sueño - Median: {median_sueño_str}")
print("REM % - Mode:", mode_no_wn_rem)
print("REM % - Mean:", round(mean_no_wn_rem, 2))
print("REM % - Median:", median_no_wn_rem)
print("Deep Sleep % - Mode:", mode_no_wn_deep_sleep)
print("Deep Sleep % - Mean:", round(mean_no_wn_deep_sleep, 2))
print("Deep Sleep % - Median:", median_no_wn_deep_sleep)

print("\nWith White Noise:")
print("Horas de S. WN - Mode:", mode_wn_sueño)
print(f"Horas de S. WN - Mean: {mean_wn_str}")
print(f"Horas de S. WN - Median: {median_wn_str}")
print("REM % WN - Mode:", mode_wn_rem)
print("REM % WN - Mean:", round(mean_wn_rem, 2))
print("REM % WN - Median:", median_wn_rem)
print("Deep Sleep % WN - Mode:", mode_wn_deep_sleep)
print("Deep Sleep % WN - Mean:", round(mean_wn_deep_sleep, 2))
print("Deep Sleep % WN - Median:", median_wn_deep_sleep)

import pandas as pd
import matplotlib.pyplot as plt

# Create a DataFrame from the data
data = {
    'Dispositivo': ['Withings Sleep', 'Apple Watch', 'Withings Sleep', 'Xiaomi Band', 'Apple Watch', 'Fitbit'],
    'Nombre (Siglas)': ['C.L.C.A.', 'I.V.C.S.', 'X.M.', 'M.A.V.', 'S.G.N.', 'E.C.'],
    'Horas de Sueño': ['8:23', '4:45', '7:04', '8:02', '6:51', '5:39'],
    'REM %': ['25,00%', '19.3', '29%', '21,00%', '24,00%', '7,00%'],
    'Deep Sleep %': ['38,00%', '31.6', '26%', '28,00%', '24,00%', '9,00%'],
    'Horas de S. WN': ['7:17', '8:11', '6:44', '5:54', '9:04', '7:02'],
    'REM % WN': ['32,00%', '31.36', '33%', '15,00%', '17,00%', '18,00%'],
    'Deep Sleep % WN': ['17,00%', '12.83', '20%', '19,00%', '13,00%', '17,00%']
}

df = pd.DataFrame(data)

# Convert time columns to timedelta format
df['Horas de Sueño'] = pd.to_timedelta(df['Horas de Sueño'] + ':00')
df['Horas de S. WN'] = pd.to_timedelta(df['Horas de S. WN'] + ':00')

# Convert percentage columns to numeric format
df['REM %'] = df['REM %'].str.rstrip('%').str.replace(',', '.').astype(float)
df['Deep Sleep %'] = df['Deep Sleep %'].str.rstrip('%').str.replace(',', '.').astype(float)
df['REM % WN'] = df['REM % WN'].str.rstrip('%').str.replace(',', '.').astype(float)
df['Deep Sleep % WN'] = df['Deep Sleep % WN'].str.rstrip('%').str.replace(',', '.').astype(float)

# Convert time columns to minutes
df['Horas de Sueño (Minutes)'] = df['Horas de Sueño'].dt.total_seconds() / 60
df['Horas de S. WN (Minutes)'] = df['Horas de S. WN'].dt.total_seconds() / 60

# Plot Horas de Sueño and Horas de S. WN
fig, (ax1, ax2, ax3) = plt.subplots(nrows=3, ncols=1, figsize=(8, 18))

# Bar plot for Horas de Sueño and Horas de S. WN
df[['Horas de Sueño (Minutes)', 'Horas de S. WN (Minutes)']].plot(kind='bar', ax=ax1)
ax1.set_xticks(range(len(df)))
ax1.set_xticklabels(df['Dispositivo'], rotation=45)
ax1.set_ylabel('Time (Minutes)')
ax1.set_title('Horas de Sueño Sin y Con Ruido Blanco')

# Line plot for REM % and REM % WN
df[['REM %', 'REM % WN']].plot(kind='line', ax=ax2, marker='o')
ax2.set_xticks(range(len(df)))
ax2.set_xticklabels(df['Dispositivo'], rotation=45)
ax2.set_ylabel('Percentage')
ax2.set_title('Comparison of REM % and REM % WN')

# Line plot for Deep Sleep % and Deep Sleep % WN
df[['Deep Sleep %', 'Deep Sleep % WN']].plot(kind='line', ax=ax3, marker='o')
ax3.set_xticks(range(len(df)))
ax3.set_xticklabels(df['Dispositivo'], rotation=45)
ax3.set_ylabel('Percentage')
ax3.set_title('Comparison of Deep Sleep % and Deep Sleep % WN')

plt.tight_layout()
plt.show()